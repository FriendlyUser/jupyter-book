version: 2
jobs:

  pdfhtml:
    docker:
      - image: circleci/python:3.6-stretch
    steps:
      - run: sudo apt-get update
      - checkout

      - restore_cache:
          keys:
            - cache-pip

      - run: pip install --user .[testing,pdfhtml]
      - save_cache:
          key: cache-pip
          paths:
            - ~/.cache/pip

      - run:
          name: Install Headless Chrome dependencies
          command: |
            sudo apt-get install -yq $(cat .github/workflows/pyppeteer_reqs.txt)

      - run:
          name: Install chromium
          command: pyppeteer-install

      - run:
          name: Run pytest for pdfhtml
          command: pytest -m 'requires_chrome'

      # Build a PDF of the book to view as an artifact
      - run:
          name: PDF from HTML
          command: jb build docs --builder pdfhtml -n -W --keep-going

      - store_artifacts:
          path: docs/_build/pdf/book.pdf
          destination: pdf

  pdflatex:
    docker:
      - image: circleci/python:3.6-stretch
    steps:
      - run: sudo apt-get update
      - checkout

      - restore_cache:
          keys:
            - cache-pip
      - run: pip install --user .[testing,pdflatex]
      - save_cache:
          key: cache-pip
          paths:
            - ~/.cache/pip

      - restore_cache:
          keys:
            - texlive
      - run:
          name: Install texlive
          command: |
            bash scripts/install_latex.sh
            echo 'export PATH=/tmp/texlive/bin/x86_64-linux:$PATH' >> $BASH_ENV
            source /home/circleci/.bashrc
      - save_cache:
          key: texlive
          paths:
            - /tmp/texlive

      - run:
          name: Run pytest for pdflatex
          command: pytest -m 'requires_tex'

      # Build quantecon-mini-example project as a test case
      # TODO: revert this to building docs/ when we've added support for svg, gif, etc
      - run:
          name: PDF from LaTeX
          command: |
            git clone https://github.com/executablebooks/quantecon-mini-example.git
            cd quantecon-mini-example/
            pip install -r requirements.txt
            jb build mini_book --builder pdflatex -n -W --keep-going

      - store_artifacts:
          path: quantecon-mini-example/mini_book/_build/latex/book.pdf
          destination: pdflatex

workflows:
  version: 2
  default:
    jobs:
      - pdfhtml
      - pdflatex
